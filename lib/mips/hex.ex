defmodule Mips.Hex do
  @spec hex(line::binary()) :: nonempty_list(<<_::32>>)
  def hex(<<"sll    $",d::8,", $",t::8,", ",h::32>>), do: [<<0::11,t::5,d::5,h::5,0::6 >>]
  def hex(<<"srl    $",d::8,", $",t::8,", ",h::32>>), do: [<<0::11,t::5,d::5,h::5,1::6 >>]
  def hex(<<"sla    $",d::8,", $",t::8,", ",h::32>>), do: [<<0::11,t::5,d::5,h::5,2::6 >>] # Might not exist
  def hex(<<"sra    $",d::8,", $",t::8,", ",h::32>>), do: [<<0::11,t::5,d::5,h::5,3::6 >>]
  def hex(<<"sllv   $",d::8,", $",s::8,", $",t::8>>), do: [<<0::6,s::5,t::5,d::5, 4::11>>]
  def hex(<<"slrv   $",d::8,", $",s::8,", $",t::8>>), do: [<<0::6,s::5,t::5,d::5, 5::11>>]
  def hex(<<"add    $",d::8,", $",s::8,", $",t::8>>), do: [<<0::6,s::5,t::5,d::5,32::11>>]
  def hex(<<"addu   $",d::8,", $",s::8,", $",t::8>>), do: [<<0::6,s::5,t::5,d::5,33::11>>]
  def hex(<<"sub    $",d::8,", $",s::8,", $",t::8>>), do: [<<0::6,s::5,t::5,d::5,34::11>>]
  def hex(<<"subu   $",d::8,", $",s::8,", $",t::8>>), do: [<<0::6,s::5,t::5,d::5,35::11>>]
  def hex(<<"and    $",d::8,", $",s::8,", $",t::8>>), do: [<<0::6,s::5,t::5,d::5,36::11>>]
  def hex(<<"or     $",d::8,", $",s::8,", $",t::8>>), do: [<<0::6,s::5,t::5,d::5,37::11>>]
  def hex(<<"xor    $",d::8,", $",s::8,", $",t::8>>), do: [<<0::6,s::5,t::5,d::5,38::11>>]
  def hex(<<"nor    $",d::8,", $",s::8,", $",t::8>>), do: [<<0::6,s::5,t::5,d::5,39::11>>] # Might not exist
  def hex(<<"slt    $",d::8,", $",s::8,", $",t::8>>), do: [<<0::6,s::5,t::5,d::5,42::11>>]
  def hex(<<"sltv   $",d::8,", $",s::8,", $",t::8>>), do: [<<0::6,s::5,t::5,d::5,43::11>>]
  def hex(_), do: [<<0::32>>]
end
